package home_work_1;

public class BitwiseOperatorsNegative {
    public static void main(String[] args) {

        // Отрицательные числа
        // 00101010     42
        // 10101010     отрицательное (прямой код)
        // 11010101     инверсия
        // 11010110     дополнительный код

        int n1 = -42;        // в памяти в двоичной системе хранится с дополнительным кодом 11010110
        int n2 = -15;        // в памяти в двоичной системе хранится с дополнительным кодом 11110001

        // 1. Побитовый унарный оператор NOT
        System.out.println(~n1);        // превращает 11010110 в 00101001 (41)
        System.out.println(~n2);        // превращает 11110001 в 00001110 (14)

        // 2. Побитовый AND
        System.out.println(n1 & n2);
        // 11010110     -42
        // 11110001     -15
        // 11010000     результат (-48)
        System.out.println(n1&=n2); // производит операцию и присваивает переменной n1 значение побитового AND
        n1 = -42; // вернул первоначальное значение переменной

        // 3. Побитовый OR
        System.out.println(n1 | n2);
        // 11010110     -42
        // 11110001     -15
        // 11110111     результат (-9)
        System.out.println(n1|=n2); // производит операцию и присваивает переменной n1 значение побитового OR
        n1=-42; // вернул первоначальное значение переменной

        // 4. Побитовый XOR (исключающий OR)
        System.out.println(n1 ^ n2);
        // 11010110     -42
        // 11110001     -15
        // 00100110     результат (39)
        System.out.println(n1^=n2); // производит операцию и присваивает переменной n1 значение побитового OR
        n1=-42; // вернул первоначальное значение переменной

        // 5. Сдвиг вправо
        System.out.println(n1>>n2);
        // Учитывая, что левый бит заполняется предыдущим значением, а сдвигаемые теряются, из 11010110 получаем 11111111 (-1)
        System.out.println(n2>>n1);
        // то же самое
        System.out.println(n1>>2);
        // 11010110     -42
        // 11110101     результат (-11)
        System.out.println(n2>>3);
        // 11110001     -15
        // 11111110    результат (-2)
        System.out.println(n2>>=3); // присваивание переменной n2 значения операции n2>>=3
        n2=-15; // вернул первоначальное значение переменной

        // 6. Нулевой сдвиг вправо
        System.out.println(n1>>>n2);
        // среда разработки говорит, что сдвиг на -15 это тоже самое что на 17 (прибавляет 32 пока не получится положительное?)
        // вместо 1111_1111_1111_1111_1111_1111_1101_0110 получаем 0000_0000_0000_0001_1111_1111_1111_1111
        System.out.println(n2>>>n1);
        // среда разработки говорит, что сдвиг на -42 это тоже самое что на 22
        // вместо 1111_1111_1111_1111_1111_1111_1111_0001 получаем 0000_0000_0000_0000_0000_0011_1111_1111
        System.out.println(n1>>>2);
        // вместо 1111_1111_1111_1111_1111_1111_1101_0110 получает 0011_1111_1111_1111_1111_1111_1111_0101
        System.out.println(n2>>>3);
        // вместо 1111_1111_1111_1111_1111_1111_1111_0001 получаем 0001_1111_1111_1111_1111_1111_1111_1110
        System.out.println(n2>>>=3); // присваивание переменной n2 значения операции n2>>>=3
        n2=-15; // вернул первоначальное значение переменной

        // 7. Сдвиг влево
        System.out.println(n1<<n2);
        // среда разработки говорит, что сдвиг на -15 это тоже самое что на 17 (прибавляет 32 пока не получится положительное?)
        // вместо 1111_1111_1111_1111_1111_1111_1101_0110 получаем 1111_1111_1010_1100_0000_0000_0000_0000
        System.out.println(n2<<n1);
        // среда разработки говорит, что сдвиг на -42 это тоже самое что на 22
        // вместо 1111_1111_1111_1111_1111_1111_1111_0001 получаем 1111_1100_0100_0000_0000_0000_0000_0000
        System.out.println(n1<<2);
        // вместо 1111_1111_1111_1111_1111_1111_1101_0110 получаем 1111_1111_1111_1111_1111_1111_0101_1000
        System.out.println(n2<<3);
        // вместо 1111_1111_1111_1111_1111_1111_1111_0001 получаем 1111_1111_1111_1111_1111_1111_1000_1000
        System.out.println(n2<<=3); // присваивание переменной n2 значения операции n2<<=3
        n2=15; // вернул первоначальное значение переменной
    }
}
